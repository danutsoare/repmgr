#!/bin/bash
# repmgr status check script for cluster {{ cluster_name }}
# Generated by Ansible

set -e

CLUSTER_NAME="{{ cluster_name }}"
PG_VERSION="{{ postgresql_version }}"
PG_PORT="{{ postgresql_port }}"
PG_USER="{{ postgresql_user }}"
REPMGR_USER="{{ repmgr_user }}"
REPMGR_DB="{{ repmgr_database }}"
REPMGRD_SERVICE="repmgrd-${PG_VERSION}"

echo "=== repmgr Status Check for ${CLUSTER_NAME} ==="
echo "Date: $(date)"
echo ""

# Check repmgrd service status
echo "repmgrd Service Status:"
systemctl is-active ${REPMGRD_SERVICE} && echo "✓ repmgrd is running" || echo "✗ repmgrd is not running"
systemctl is-enabled ${REPMGRD_SERVICE} && echo "✓ repmgrd is enabled" || echo "✗ repmgrd is not enabled"
echo ""

# Check repmgr configuration
echo "Configuration:"
if [ -f "/etc/repmgr/${PG_VERSION}/repmgr.conf" ]; then
    echo "✓ repmgr configuration exists"
    echo "  Node ID: $(grep '^node_id=' /etc/repmgr/${PG_VERSION}/repmgr.conf | cut -d'=' -f2)"
    echo "  Node Name: $(grep '^node_name=' /etc/repmgr/${PG_VERSION}/repmgr.conf | cut -d'=' -f2)"
    echo "  Cluster: $(grep '^cluster=' /etc/repmgr/${PG_VERSION}/repmgr.conf | cut -d'=' -f2)"
else
    echo "✗ repmgr configuration not found"
fi
echo ""

# Check cluster status
echo "Cluster Status:"
if sudo -u ${PG_USER} /usr/pgsql-${PG_VERSION}/bin/pg_isready -p ${PG_PORT} -h localhost > /dev/null 2>&1; then
    echo "Cluster topology:"
    sudo -u ${PG_USER} /usr/pgsql-${PG_VERSION}/bin/repmgr -f /etc/repmgr/${PG_VERSION}/repmgr.conf cluster show 2>/dev/null || echo "Could not retrieve cluster status"
    echo ""
    
    echo "Node status:"
    sudo -u ${PG_USER} /usr/pgsql-${PG_VERSION}/bin/repmgr -f /etc/repmgr/${PG_VERSION}/repmgr.conf node status 2>/dev/null || echo "Could not retrieve node status"
    echo ""
    
    # Check if this is primary or standby
    echo "Replication Status:"
    RECOVERY_STATUS=$(sudo -u ${PG_USER} /usr/pgsql-${PG_VERSION}/bin/psql -p ${PG_PORT} -d postgres -tAc "SELECT pg_is_in_recovery();" 2>/dev/null || echo "unknown")
    if [ "$RECOVERY_STATUS" = "f" ]; then
        echo "✓ This node is PRIMARY"
        echo "Active standby connections:"
        sudo -u ${PG_USER} /usr/pgsql-${PG_VERSION}/bin/psql -p ${PG_PORT} -d postgres -c "SELECT client_addr, state, sync_state FROM pg_stat_replication;" 2>/dev/null || echo "Could not query replication status"
    elif [ "$RECOVERY_STATUS" = "t" ]; then
        echo "✓ This node is STANDBY"
        echo "Replication lag:"
        sudo -u ${PG_USER} /usr/pgsql-${PG_VERSION}/bin/psql -p ${PG_PORT} -d postgres -c "SELECT now() - pg_last_xact_replay_timestamp() AS replication_lag;" 2>/dev/null || echo "Could not query replication lag"
    else
        echo "✗ Could not determine node role"
    fi
else
    echo "✗ PostgreSQL not available for cluster status check"
fi
echo ""

# Show recent repmgr log entries
echo "Recent repmgr Log Entries:"
if [ -f "/var/log/repmgr/${PG_VERSION}/repmgr-${CLUSTER_NAME}.log" ]; then
    echo "Last 10 entries from repmgr log:"
    tail -10 "/var/log/repmgr/${PG_VERSION}/repmgr-${CLUSTER_NAME}.log" 2>/dev/null || echo "Could not read repmgr log"
else
    echo "repmgr log file not found"
fi